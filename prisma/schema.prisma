// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  UserAccount   UserAccount? @relation("useraccountsTousers")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model UserAccount {
  userAcctId Int       @id @default(autoincrement())
  id         String?   @unique
  userTypeId Int
  name       String
  UserType   UserTypes @relation(fields: [userTypeId], references: [userTypeId])
  users      User?     @relation("useraccountsTousers", fields: [id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_to_useraccounts")
}

model UserTypes {
  userTypeId   Int           @id @default(autoincrement())
  userTypeName String
  UserAccount  UserAccount[]
}

model Thoughts {
  thoughtId Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
